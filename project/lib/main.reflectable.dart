// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.
// @dart = 2.12

import 'dart:core';
import 'package:project/shared/decorators/imitable.decorator.dart' as prefix0;
import 'package:project/shared/models/api_data.model.dart' as prefix1;
import 'package:project/shared/models/ubike_stop.model.dart' as prefix2;

// ignore_for_file: prefer_adjacent_string_concatenation
// ignore_for_file: prefer_collection_literals
// ignore_for_file: unnecessary_const
// ignore_for_file: implementation_imports

// ignore:unused_import
import 'package:reflectable/mirrors.dart' as m;
// ignore:unused_import
import 'package:reflectable/src/reflectable_builder_based.dart' as r;
// ignore:unused_import
import 'package:reflectable/reflectable.dart' as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.Imitable(): r.ReflectorData(
      <m.TypeMirror>[
        r.GenericClassMirrorImpl(
            r'ApiData',
            r'.ApiData',
            7,
            0,
            const prefix0.Imitable(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {
              r'': (bool b) => ({STATUS, COLLECTION}) => b
                  ? prefix1.ApiData(COLLECTION: COLLECTION, STATUS: STATUS)
                  : null
            },
            -1,
            -1,
            const <int>[-1],
            null,
            {
              r'==': 1,
              r'toString': 0,
              r'noSuchMethod': 1,
              r'hashCode': 0,
              r'runtimeType': 0,
              r'STATUS': 0,
              r'STATUS=': 1,
              r'COLLECTION': 0,
              r'COLLECTION=': 1
            }, (o) {
          return o is prefix1.ApiData;
        }, null, 0),
        r.NonGenericClassMirrorImpl(
            r'UBikeStop',
            r'.UBikeStop',
            7,
            1,
            const prefix0.Imitable(),
            const <int>[-1],
            null,
            null,
            -1,
            {r'fromJson': () => prefix2.UBikeStop.fromJson},
            {},
            {
              r'': (bool b) => (
                      {SNO,
                      SNA,
                      TOT,
                      SBI,
                      SAREA,
                      MDAY,
                      LAT,
                      LNG,
                      AR,
                      SAREAEN,
                      SNAEN,
                      AREN,
                      BEMP,
                      ACT}) =>
                  b
                      ? prefix2.UBikeStop(
                          ACT: ACT,
                          AR: AR,
                          AREN: AREN,
                          BEMP: BEMP,
                          LAT: LAT,
                          LNG: LNG,
                          MDAY: MDAY,
                          SAREA: SAREA,
                          SAREAEN: SAREAEN,
                          SBI: SBI,
                          SNA: SNA,
                          SNAEN: SNAEN,
                          SNO: SNO,
                          TOT: TOT)
                      : null
            },
            -1,
            -1,
            const <int>[-1],
            null,
            {
              r'==': 1,
              r'toString': 0,
              r'noSuchMethod': 1,
              r'hashCode': 0,
              r'runtimeType': 0,
              r'toJson': 0,
              r'SNO': 0,
              r'SNO=': 1,
              r'SNA': 0,
              r'SNA=': 1,
              r'TOT': 0,
              r'TOT=': 1,
              r'SBI': 0,
              r'SBI=': 1,
              r'SAREA': 0,
              r'SAREA=': 1,
              r'MDAY': 0,
              r'MDAY=': 1,
              r'LAT': 0,
              r'LAT=': 1,
              r'LNG': 0,
              r'LNG=': 1,
              r'AR': 0,
              r'AR=': 1,
              r'SAREAEN': 0,
              r'SAREAEN=': 1,
              r'SNAEN': 0,
              r'SNAEN=': 1,
              r'AREN': 0,
              r'AREN=': 1,
              r'BEMP': 0,
              r'BEMP=': 1,
              r'ACT': 0,
              r'ACT=': 1,
              r'fromJson': 1
            }),
        r.TypeVariableMirrorImpl(
            r'T', r'.ApiData.T', const prefix0.Imitable(), -1, 0, null)
      ],
      null,
      null,
      <Type>[prefix1.ApiData, prefix2.UBikeStop],
      2,
      {
        r'==': (dynamic instance) => (x) => instance == x,
        r'toString': (dynamic instance) => instance.toString,
        r'noSuchMethod': (dynamic instance) => instance.noSuchMethod,
        r'hashCode': (dynamic instance) => instance.hashCode,
        r'runtimeType': (dynamic instance) => instance.runtimeType,
        r'STATUS': (dynamic instance) => instance.STATUS,
        r'COLLECTION': (dynamic instance) => instance.COLLECTION,
        r'toJson': (dynamic instance) => instance.toJson,
        r'SNO': (dynamic instance) => instance.SNO,
        r'SNA': (dynamic instance) => instance.SNA,
        r'TOT': (dynamic instance) => instance.TOT,
        r'SBI': (dynamic instance) => instance.SBI,
        r'SAREA': (dynamic instance) => instance.SAREA,
        r'MDAY': (dynamic instance) => instance.MDAY,
        r'LAT': (dynamic instance) => instance.LAT,
        r'LNG': (dynamic instance) => instance.LNG,
        r'AR': (dynamic instance) => instance.AR,
        r'SAREAEN': (dynamic instance) => instance.SAREAEN,
        r'SNAEN': (dynamic instance) => instance.SNAEN,
        r'AREN': (dynamic instance) => instance.AREN,
        r'BEMP': (dynamic instance) => instance.BEMP,
        r'ACT': (dynamic instance) => instance.ACT
      },
      {
        r'STATUS=': (dynamic instance, value) => instance.STATUS = value,
        r'COLLECTION=': (dynamic instance, value) =>
            instance.COLLECTION = value,
        r'SNO=': (dynamic instance, value) => instance.SNO = value,
        r'SNA=': (dynamic instance, value) => instance.SNA = value,
        r'TOT=': (dynamic instance, value) => instance.TOT = value,
        r'SBI=': (dynamic instance, value) => instance.SBI = value,
        r'SAREA=': (dynamic instance, value) => instance.SAREA = value,
        r'MDAY=': (dynamic instance, value) => instance.MDAY = value,
        r'LAT=': (dynamic instance, value) => instance.LAT = value,
        r'LNG=': (dynamic instance, value) => instance.LNG = value,
        r'AR=': (dynamic instance, value) => instance.AR = value,
        r'SAREAEN=': (dynamic instance, value) => instance.SAREAEN = value,
        r'SNAEN=': (dynamic instance, value) => instance.SNAEN = value,
        r'AREN=': (dynamic instance, value) => instance.AREN = value,
        r'BEMP=': (dynamic instance, value) => instance.BEMP = value,
        r'ACT=': (dynamic instance, value) => instance.ACT = value
      },
      null,
      [
        const [0, 0, null],
        const [1, 0, null],
        const [
          0,
          0,
          const [#STATUS, #COLLECTION]
        ],
        const [
          0,
          0,
          const [
            #SNO,
            #SNA,
            #TOT,
            #SBI,
            #SAREA,
            #MDAY,
            #LAT,
            #LNG,
            #AR,
            #SAREAEN,
            #SNAEN,
            #AREN,
            #BEMP,
            #ACT
          ]
        ]
      ])
};

final _memberSymbolMap = null;

void initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
